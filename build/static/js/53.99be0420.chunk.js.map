{"version":3,"sources":["components/user/profile/clubsTab/ClubItems.js","components/user/profile/clubsTab/Club.js","components/SearchNotFound.js"],"names":["SearchStyle","styled","OutlinedInput","theme","width","marginBottom","spacing","transition","transitions","create","easing","easeInOut","duration","shorter","boxShadow","customShadows","z8","borderWidth","borderColor","palette","grey","FollowersCard","follower","handleToggleFollow","name","country","avatarUrl","isFollowed","Card","sx","py","display","position","alignItems","flexDirection","Avatar","alt","src","height","mb","Link","to","variant","color","component","RouterLink","Typography","Box","mt","Button","onClick","startIcon","IconButton","top","right","ClubItems","followers","title","useState","findFollowers","setfindFollowers","clubsFiltered","array","query","arr","filter","_club","toLowerCase","indexOf","applyFilter","isNotFound","length","value","onChange","e","target","placeholder","startAdornment","InputAdornment","Grid","container","map","item","xs","md","id","SearchNotFound","searchQuery","Club","props","useSelector","state","user","dispatch","useDispatch","useEffect","getFollowers","followerId","onToggleFollow","firstArr","slice","secArr","Divider","pt","other","gutterBottom","align"],"mappings":"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","file":"static/js/53.99be0420.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { filter } from \"lodash\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport MoreVertIcon from \"@mui/icons-material/MoreVert\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport ThumbUpIcon from \"@mui/icons-material/ThumbUp\";\r\n// material\r\nimport { styled } from \"@mui/material/styles\";\r\nimport {\r\n  Box,\r\n  Grid,\r\n  Card,\r\n  Link,\r\n  Avatar,\r\n  Button,\r\n  IconButton,\r\n  Typography,\r\n  OutlinedInput,\r\n  InputAdornment,\r\n} from \"@mui/material\";\r\n//\r\nimport SearchNotFound from \"../../../SearchNotFound\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst SearchStyle = styled(OutlinedInput)(({ theme }) => ({\r\n  width: 340,\r\n  marginBottom: theme.spacing(5),\r\n  transition: theme.transitions.create([\"box-shadow\", \"width\"], {\r\n    easing: theme.transitions.easing.easeInOut,\r\n    duration: theme.transitions.duration.shorter,\r\n  }),\r\n  \"&.Mui-focused\": {\r\n    width: 320,\r\n    boxShadow: theme.customShadows.z8,\r\n  },\r\n  \"& fieldset\": {\r\n    borderWidth: `1px !important`,\r\n    borderColor: `${theme.palette.grey[500_32]} !important`,\r\n  },\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction applyFilter(array, query) {\r\n  let arr = array;\r\n  if (query) {\r\n    arr = filter(\r\n      array,\r\n      (_club) => _club.name.toLowerCase().indexOf(query.toLowerCase()) !== -1\r\n    );\r\n  }\r\n  return arr;\r\n}\r\nFollowersCard.propTypes = {\r\n  friend: PropTypes.object,\r\n  handleToggleFollow: PropTypes.func,\r\n};\r\n\r\nfunction FollowersCard({ follower, handleToggleFollow }) {\r\n  const { name, country, avatarUrl, isFollowed } = follower;\r\n\r\n  return (\r\n    <Card\r\n      sx={{\r\n        py: 5,\r\n        display: \"flex\",\r\n        position: \"relative\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n      }}\r\n    >\r\n      <Avatar\r\n        alt={name}\r\n        src={avatarUrl}\r\n        sx={{ width: 64, height: 64, mb: 3 }}\r\n      />\r\n      <Link\r\n        to=\"#\"\r\n        variant=\"subtitle1\"\r\n        color=\"text.primary\"\r\n        component={RouterLink}\r\n      >\r\n        {name}\r\n      </Link>\r\n      <Typography variant=\"body2\" sx={{ color: \"text.secondary\" }}>\r\n        {country}\r\n      </Typography>\r\n      <Box sx={{ mt: 1 }}>\r\n        <Button\r\n          variant={isFollowed ? \"outlined\" : \"contained\"}\r\n          color={isFollowed ? \"inherit\" : \"primary\"}\r\n          onClick={handleToggleFollow}\r\n          startIcon={\r\n            !isFollowed && (\r\n              <ThumbUpIcon sx={{ width: \"18px\", height: \"18px\" }} />\r\n            )\r\n          }\r\n        >\r\n          {isFollowed ? \"Followed\" : \"Follow\"}\r\n        </Button>\r\n      </Box>\r\n      <IconButton\r\n        sx={{\r\n          top: 8,\r\n          right: 8,\r\n          position: \"absolute\",\r\n        }}\r\n      >\r\n        <MoreVertIcon />\r\n      </IconButton>\r\n    </Card>\r\n  );\r\n}\r\n\r\nClubItems.propTypes = {\r\n  followers: PropTypes.array,\r\n  handleToggleFollow: PropTypes.func,\r\n  title: PropTypes.string,\r\n};\r\nexport default function ClubItems({ followers, handleToggleFollow, title }) {\r\n  const [findFollowers, setfindFollowers] = useState(\"\");\r\n  const clubsFiltered = applyFilter(followers, findFollowers);\r\n  const isNotFound = clubsFiltered.length === 0;\r\n\r\n  return (\r\n    <Box sx={{ mt: 5 }}>\r\n      <Typography variant=\"h4\" sx={{ mb: 3 }}>\r\n        {title}\r\n      </Typography>\r\n\r\n      <SearchStyle\r\n        value={findFollowers}\r\n        onChange={(e) => setfindFollowers(e.target.value)}\r\n        placeholder=\"Search clubs by name...\"\r\n        startAdornment={\r\n          <InputAdornment position=\"start\">\r\n            <Box sx={{ color: \"text.disabled\" }}>\r\n              <SearchIcon />\r\n            </Box>\r\n          </InputAdornment>\r\n        }\r\n      />\r\n\r\n      <Grid container spacing={3}>\r\n        {clubsFiltered.map((follower) => (\r\n          <Grid key={follower.id} item xs={12} md={4}>\r\n            <FollowersCard\r\n              follower={follower}\r\n              handleToggleFollow={() => handleToggleFollow(follower.id)}\r\n            />\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n      {isNotFound && (\r\n        <Box sx={{ mt: 5 }}>\r\n          <SearchNotFound searchQuery={findFollowers} />\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"../../../../redux/store\";\r\nimport { getFollowers, onToggleFollow } from \"../../../../redux/slices/user\";\r\nimport ClubItems from \"./ClubItems\";\r\nimport { Divider, Box } from \"@mui/material\";\r\nfunction Club(props) {\r\n  const { followers } = useSelector((state) => state.user);\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(getFollowers());\r\n  }, [dispatch]);\r\n  const handleToggleFollow = (followerId) => {\r\n    dispatch(onToggleFollow(followerId));\r\n  };\r\n  const firstArr = followers.slice(0, 5);\r\n  const secArr = followers.slice(5);\r\n\r\n  return (\r\n    <div>\r\n      <Box>\r\n        <ClubItems\r\n          followers={firstArr}\r\n          handleToggleFollow={handleToggleFollow}\r\n          title={\"Clubs vaibhav creted\"}\r\n        />\r\n      </Box>\r\n      <Divider sx={{ mt: 5, pt: 2 }} />\r\n      <Box>\r\n        <ClubItems\r\n          followers={secArr}\r\n          handleToggleFollow={handleToggleFollow}\r\n          title={\"Clubs vaibhav is member of\"}\r\n        />\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Club;\r\n","import PropTypes from \"prop-types\";\r\n// material\r\nimport { Paper, Typography } from \"@mui/material\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nSearchNotFound.propTypes = {\r\n  searchQuery: PropTypes.string,\r\n};\r\n\r\nexport default function SearchNotFound({ searchQuery = \"\", ...other }) {\r\n  return (\r\n    <Paper {...other}>\r\n      <Typography gutterBottom align=\"center\" variant=\"subtitle1\">\r\n        Not found\r\n      </Typography>\r\n      <Typography variant=\"body2\" align=\"center\">\r\n        No results found for &nbsp;\r\n        <strong>&quot;{searchQuery}&quot;</strong>. Try checking for typos or\r\n        using complete words.\r\n      </Typography>\r\n    </Paper>\r\n  );\r\n}\r\n"],"sourceRoot":""}