{"version":3,"sources":["../node_modules/@mui/material/useMediaQuery/useMediaQuery.js","../node_modules/@mui/material/Dialog/DialogContext.js","../node_modules/@mui/material/Dialog/Dialog.js","../node_modules/@mui/material/internal/svg-icons/MoreHoriz.js","../node_modules/@mui/material/Breadcrumbs/BreadcrumbCollapsed.js","../node_modules/@mui/material/Breadcrumbs/breadcrumbsClasses.js","../node_modules/@mui/material/Breadcrumbs/Breadcrumbs.js","../node_modules/framer-motion/dist/es/animation/animation-controls.js","../node_modules/framer-motion/dist/es/animation/use-animation.js","../node_modules/@mui/material/Fab/fabClasses.js","../node_modules/@mui/material/Fab/Fab.js","../../src/observe.ts","../../src/InView.tsx","../../src/useInView.tsx","../node_modules/@mui/material/Dialog/dialogClasses.js","../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.js","../node_modules/framer-motion/dist/es/components/AnimatePresence/index.js","../node_modules/framer-motion/dist/es/utils/use-force-update.js"],"names":["useMediaQuery","queryInput","options","theme","useTheme","supportMatchMedia","window","matchMedia","getThemeProps","name","props","defaultMatches","noSsr","ssrMatchMedia","query","replace","React","matches","match","setMatch","useEnhancedEffect","active","queryList","updateMatch","addListener","removeListener","DialogContext","createContext","_excluded","DialogBackdrop","styled","Backdrop","slot","overrides","styles","backdrop","zIndex","DialogRoot","Modal","overridesResolver","root","position","DialogContainer","ownerState","container","capitalize","scroll","_extends","height","outline","display","justifyContent","alignItems","overflowY","overflowX","textAlign","content","verticalAlign","width","DialogPaper","Paper","paper","String","maxWidth","fullWidth","paperFullWidth","fullScreen","paperFullScreen","margin","boxShadow","flexDirection","maxHeight","breakpoints","unit","Math","max","values","xs","dialogClasses","paperScrollBody","down","borderRadius","defaultTransitionDuration","enter","duration","enteringScreen","exit","leavingScreen","Dialog","inProps","ref","useThemeProps","ariaDescribedby","ariaLabelledbyProp","BackdropComponent","BackdropProps","children","className","disableEscapeKeyDown","onBackdropClick","onClose","open","PaperComponent","PaperProps","TransitionComponent","Fade","transitionDuration","TransitionProps","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","getDialogUtilityClass","useUtilityClasses","backdropClick","ariaLabelledby","useId","dialogContextValue","titleId","_jsx","clsx","as","closeAfterTransition","onClick","event","current","appear","in","timeout","role","onMouseDown","target","currentTarget","elevation","Provider","value","createSvgIcon","d","BreadcrumbCollapsedButton","ButtonBase","skipSx","marginLeft","spacing","marginRight","palette","mode","backgroundColor","grey","color","shadows","emphasize","BreadcrumbCollapsedIcon","MoreHorizIcon","BreadcrumbCollapsed","focusRipple","getBreadcrumbsUtilityClass","generateUtilityClass","breadcrumbsClasses","generateUtilityClasses","BreadcrumbsRoot","Typography","li","BreadcrumbsOl","ol","flexWrap","padding","listStyle","BreadcrumbsSeparator","separator","userSelect","insertSeparators","items","reduce","acc","index","length","concat","push","Breadcrumbs","component","expandText","itemsAfterCollapse","itemsBeforeCollapse","maxItems","expanded","setExpanded","listRef","allItems","toArray","filter","child","map","slice","focusable","querySelector","focus","renderItemsBeforeAndAfter","animationControls","hasMounted","pendingAnimations","subscribers","Set","controls","subscribe","visualElement","add","delete","start","definition","transitionOverride","animations_1","forEach","animateVisualElement","Promise","all","resolve","animation","set","invariant","setValues","stop","stopAnimation","mount","_a","apply","__spreadArray","__read","then","useAnimation","useConstant","useEffect","getFabUtilityClass","fabClasses","FabRoot","variant","size","colorInherit","primary","secondary","typography","button","minHeight","transition","transitions","create","short","minWidth","getContrastText","A100","textDecoration","focusVisible","disabled","action","disabledBackground","contrastText","main","dark","Fab","disableFocusRipple","focusVisibleClassName","observerMap","RootIds","rootId","unsupportedValue","optionsToId","Object","key","observe","element","callback","fallbackInView","bounds","isIntersecting","intersectionRatio","time","boundingClientRect","intersectionRect","rootBounds","id","instance","elements","observer","IntersectionObserver","entries","inView","entry","thresholds","Array","createObserver","callbacks","isPlainChildren","InView","node","_unobserveCb","handleNode","undefined","handleChange","componentDidUpdate","prevProps","this","componentWillUnmount","observeNode","threshold","rootMargin","trackVisibility","delay","unobserve","render","tag","useInView","triggerOnce","skip","initialInView","state","setState","setRef","result","displayName","defaultProps","presenceId","getPresenceId","PresenceChild","initial","isPresent","onExitComplete","custom","presenceAffectsLayout","presenceChildren","newChildrenMap","context","useMemo","childId","allComplete","isComplete","register","_","PresenceContext","Map","getChildKey","AnimatePresence","_b","exitBeforeEnter","_c","forceRender","unloadingRef","useRef","useState","forcedRenderCount","setForcedRenderCount","useUnmountEffect","useCallback","useForceUpdate","layoutContext","useContext","SharedLayoutContext","isSharedLayout","forceUpdate","isInitialRender","filteredChildren","filtered","Children","isValidElement","onlyElements","presentChildren","allChildren","exiting","updateChildLookup","childrenToRender","presentKeys","targetKeys","numPresent","i","indexOf","get","insertionIndex","splice","removeIndex","findIndex","presentChild","has","cloneElement"],"mappings":"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","file":"static/js/8.0f834a00.chunk.js","sourcesContent":["import * as React from 'react';\nimport { getThemeProps, useThemeWithoutDefault as useTheme } from '@mui/system';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\n/**\n * @deprecated Not used internally. Use `MediaQueryListEvent` from lib.dom.d.ts instead.\n */\n\nexport default function useMediaQuery(queryInput, options = {}) {\n  const theme = useTheme(); // Wait for jsdom to support the match media feature.\n  // All the browsers MUI support have this built-in.\n  // This defensive check is here for simplicity.\n  // Most of the time, the match media logic isn't central to people tests.\n\n  const supportMatchMedia = typeof window !== 'undefined' && typeof window.matchMedia !== 'undefined';\n  const {\n    defaultMatches = false,\n    matchMedia = supportMatchMedia ? window.matchMedia : null,\n    noSsr = false,\n    ssrMatchMedia = null\n  } = getThemeProps({\n    name: 'MuiUseMediaQuery',\n    props: options,\n    theme\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof queryInput === 'function' && theme === null) {\n      console.error(['MUI: The `query` argument provided is invalid.', 'You are providing a function without a theme in the context.', 'One of the parent elements needs to use a ThemeProvider.'].join('\\n'));\n    }\n  }\n\n  let query = typeof queryInput === 'function' ? queryInput(theme) : queryInput;\n  query = query.replace(/^@media( ?)/m, '');\n  const [match, setMatch] = React.useState(() => {\n    if (noSsr && supportMatchMedia) {\n      return matchMedia(query).matches;\n    }\n\n    if (ssrMatchMedia) {\n      return ssrMatchMedia(query).matches;\n    } // Once the component is mounted, we rely on the\n    // event listeners to return the correct matches value.\n\n\n    return defaultMatches;\n  });\n  useEnhancedEffect(() => {\n    let active = true;\n\n    if (!supportMatchMedia) {\n      return undefined;\n    }\n\n    const queryList = matchMedia(query);\n\n    const updateMatch = () => {\n      // Workaround Safari wrong implementation of matchMedia\n      // TODO can we remove it?\n      // https://github.com/mui-org/material-ui/pull/17315#issuecomment-528286677\n      if (active) {\n        setMatch(queryList.matches);\n      }\n    };\n\n    updateMatch();\n    queryList.addListener(updateMatch);\n    return () => {\n      active = false;\n      queryList.removeListener(updateMatch);\n    };\n  }, [query, matchMedia, supportMatchMedia]);\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useDebugValue({\n      query,\n      match\n    });\n  }\n\n  return match;\n}","import { createContext } from 'react';\nconst DialogContext = /*#__PURE__*/createContext({});\n\nif (process.env.NODE_ENV !== 'production') {\n  DialogContext.displayName = 'DialogContext';\n}\n\nexport default DialogContext;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"aria-describedby\", \"aria-labelledby\", \"BackdropComponent\", \"BackdropProps\", \"children\", \"className\", \"disableEscapeKeyDown\", \"fullScreen\", \"fullWidth\", \"maxWidth\", \"onBackdropClick\", \"onClose\", \"open\", \"PaperComponent\", \"PaperProps\", \"scroll\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { unstable_useId as useId } from '@mui/utils';\nimport capitalize from '../utils/capitalize';\nimport Modal from '../Modal';\nimport Fade from '../Fade';\nimport { duration } from '../styles/createTransitions';\nimport Paper from '../Paper';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport dialogClasses, { getDialogUtilityClass } from './dialogClasses';\nimport DialogContext from './DialogContext';\nimport Backdrop from '../Backdrop';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DialogBackdrop = styled(Backdrop, {\n  name: 'MuiDialog',\n  slot: 'Backdrop',\n  overrides: (props, styles) => styles.backdrop\n})({\n  // Improve scrollable dialog support.\n  zIndex: -1\n});\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    scroll,\n    maxWidth,\n    fullWidth,\n    fullScreen\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    container: ['container', `scroll${capitalize(scroll)}`],\n    paper: ['paper', `paperScroll${capitalize(scroll)}`, `paperWidth${capitalize(String(maxWidth))}`, fullWidth && 'paperFullWidth', fullScreen && 'paperFullScreen']\n  };\n  return composeClasses(slots, getDialogUtilityClass, classes);\n};\n\nconst DialogRoot = styled(Modal, {\n  name: 'MuiDialog',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  '@media print': {\n    // Use !important to override the Modal inline-style.\n    position: 'absolute !important'\n  }\n});\nconst DialogContainer = styled('div', {\n  name: 'MuiDialog',\n  slot: 'Container',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.container, styles[`scroll${capitalize(ownerState.scroll)}`]];\n  }\n})(({\n  ownerState\n}) => _extends({\n  height: '100%',\n  '@media print': {\n    height: 'auto'\n  },\n  // We disable the focus ring for mouse, touch and keyboard users.\n  outline: 0\n}, ownerState.scroll === 'paper' && {\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center'\n}, ownerState.scroll === 'body' && {\n  overflowY: 'auto',\n  overflowX: 'hidden',\n  textAlign: 'center',\n  '&:after': {\n    content: '\"\"',\n    display: 'inline-block',\n    verticalAlign: 'middle',\n    height: '100%',\n    width: '0'\n  }\n}));\nconst DialogPaper = styled(Paper, {\n  name: 'MuiDialog',\n  slot: 'Paper',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.paper, styles[`scrollPaper${capitalize(ownerState.scroll)}`], styles[`paperWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fullWidth && styles.paperFullWidth, ownerState.fullScreen && styles.paperFullScreen];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  margin: 32,\n  position: 'relative',\n  overflowY: 'auto',\n  // Fix IE11 issue, to remove at some point.\n  '@media print': {\n    overflowY: 'visible',\n    boxShadow: 'none'\n  }\n}, ownerState.scroll === 'paper' && {\n  display: 'flex',\n  flexDirection: 'column',\n  maxHeight: 'calc(100% - 64px)'\n}, ownerState.scroll === 'body' && {\n  display: 'inline-block',\n  verticalAlign: 'middle',\n  textAlign: 'left' // 'initial' doesn't work on IE11\n\n}, !ownerState.maxWidth && {\n  maxWidth: 'calc(100% - 64px)'\n}, ownerState.maxWidth === 'xs' && {\n  maxWidth: theme.breakpoints.unit === 'px' ? Math.max(theme.breakpoints.values.xs, 444) : `${theme.breakpoints.values.xs}${theme.breakpoints.unit}`,\n  [`&.${dialogClasses.paperScrollBody}`]: {\n    [theme.breakpoints.down(Math.max(theme.breakpoints.values.xs, 444) + 32 * 2)]: {\n      maxWidth: 'calc(100% - 64px)'\n    }\n  }\n}, ownerState.maxWidth !== 'xs' && {\n  maxWidth: `${theme.breakpoints.values[ownerState.maxWidth]}${theme.breakpoints.unit}`,\n  [`&.${dialogClasses.paperScrollBody}`]: {\n    [theme.breakpoints.down(theme.breakpoints.values[ownerState.maxWidth] + 32 * 2)]: {\n      maxWidth: 'calc(100% - 64px)'\n    }\n  }\n}, ownerState.fullWidth && {\n  width: 'calc(100% - 64px)'\n}, ownerState.fullScreen && {\n  margin: 0,\n  width: '100%',\n  maxWidth: '100%',\n  height: '100%',\n  maxHeight: 'none',\n  borderRadius: 0,\n  [`&.${dialogClasses.paperScrollBody}`]: {\n    margin: 0,\n    maxWidth: '100%'\n  }\n}));\nconst defaultTransitionDuration = {\n  enter: duration.enteringScreen,\n  exit: duration.leavingScreen\n};\n/**\n * Dialogs are overlaid modal paper based components with a backdrop.\n */\n\nconst Dialog = /*#__PURE__*/React.forwardRef(function Dialog(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialog'\n  });\n\n  const {\n    'aria-describedby': ariaDescribedby,\n    'aria-labelledby': ariaLabelledbyProp,\n    BackdropComponent,\n    BackdropProps,\n    children,\n    className,\n    disableEscapeKeyDown = false,\n    fullScreen = false,\n    fullWidth = false,\n    maxWidth = 'sm',\n    onBackdropClick,\n    onClose,\n    open,\n    PaperComponent = Paper,\n    PaperProps = {},\n    scroll = 'paper',\n    TransitionComponent = Fade,\n    transitionDuration = defaultTransitionDuration,\n    TransitionProps\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    disableEscapeKeyDown,\n    fullScreen,\n    fullWidth,\n    maxWidth,\n    scroll\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const backdropClick = React.useRef();\n\n  const handleMouseDown = event => {\n    // We don't want to close the dialog when clicking the dialog content.\n    // Make sure the event starts and ends on the same DOM element.\n    backdropClick.current = event.target === event.currentTarget;\n  };\n\n  const handleBackdropClick = event => {\n    // Ignore the events not coming from the \"backdrop\".\n    if (!backdropClick.current) {\n      return;\n    }\n\n    backdropClick.current = null;\n\n    if (onBackdropClick) {\n      onBackdropClick(event);\n    }\n\n    if (onClose) {\n      onClose(event, 'backdropClick');\n    }\n  };\n\n  const ariaLabelledby = useId(ariaLabelledbyProp);\n  const dialogContextValue = React.useMemo(() => {\n    return {\n      titleId: ariaLabelledby\n    };\n  }, [ariaLabelledby]);\n  return /*#__PURE__*/_jsx(DialogRoot, _extends({\n    className: clsx(classes.root, className),\n    BackdropProps: _extends({\n      transitionDuration,\n      as: BackdropComponent\n    }, BackdropProps),\n    closeAfterTransition: true,\n    BackdropComponent: DialogBackdrop,\n    disableEscapeKeyDown: disableEscapeKeyDown,\n    onClose: onClose,\n    open: open,\n    ref: ref,\n    onClick: handleBackdropClick,\n    ownerState: ownerState\n  }, other, {\n    children: /*#__PURE__*/_jsx(TransitionComponent, _extends({\n      appear: true,\n      in: open,\n      timeout: transitionDuration,\n      role: \"presentation\"\n    }, TransitionProps, {\n      children: /*#__PURE__*/_jsx(DialogContainer, {\n        className: clsx(classes.container),\n        onMouseDown: handleMouseDown,\n        ownerState: ownerState,\n        children: /*#__PURE__*/_jsx(DialogPaper, _extends({\n          as: PaperComponent,\n          elevation: 24,\n          role: \"dialog\",\n          \"aria-describedby\": ariaDescribedby,\n          \"aria-labelledby\": ariaLabelledby\n        }, PaperProps, {\n          className: clsx(classes.paper, PaperProps.className),\n          ownerState: ownerState,\n          children: /*#__PURE__*/_jsx(DialogContext.Provider, {\n            value: dialogContextValue,\n            children: children\n          })\n        }))\n      })\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Dialog.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The id(s) of the element(s) that describe the dialog.\n   */\n  'aria-describedby': PropTypes.string,\n\n  /**\n   * The id(s) of the element(s) that label the dialog.\n   */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * A backdrop component. This prop enables custom backdrop rendering.\n   * @default styled(Backdrop, {\n   *   name: 'MuiModal',\n   *   slot: 'Backdrop',\n   *   overridesResolver: (props, styles) => {\n   *     return styles.backdrop;\n   *   },\n   * })({\n   *   zIndex: -1,\n   * })\n   */\n  BackdropComponent: PropTypes.elementType,\n\n  /**\n   * @ignore\n   */\n  BackdropProps: PropTypes.object,\n\n  /**\n   * Dialog children, usually the included sub-components.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, hitting escape will not fire the `onClose` callback.\n   * @default false\n   */\n  disableEscapeKeyDown: PropTypes.bool,\n\n  /**\n   * If `true`, the dialog is full-screen.\n   * @default false\n   */\n  fullScreen: PropTypes.bool,\n\n  /**\n   * If `true`, the dialog stretches to `maxWidth`.\n   *\n   * Notice that the dialog width grow is limited by the default margin.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the dialog.\n   * The dialog width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'sm'\n   */\n  maxWidth: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n\n  /**\n   * Callback fired when the backdrop is clicked.\n   */\n  onBackdropClick: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n\n  /**\n   * The component used to render the body of the dialog.\n   * @default Paper\n   */\n  PaperComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`Paper`](/api/paper/) element.\n   * @default {}\n   */\n  PaperProps: PropTypes.object,\n\n  /**\n   * Determine the container for scrolling the dialog.\n   * @default 'paper'\n   */\n  scroll: PropTypes.oneOf(['body', 'paper']),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   * @default Fade\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   * @default { enter: duration.enteringScreen, exit: duration.leavingScreen }\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition/) component.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default Dialog;","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreHoriz');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { emphasize } from '@mui/system';\nimport styled from '../styles/styled';\nimport MoreHorizIcon from '../internal/svg-icons/MoreHoriz';\nimport ButtonBase from '../ButtonBase';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst BreadcrumbCollapsedButton = styled(ButtonBase, {\n  skipSx: true\n})(({\n  theme\n}) => _extends({\n  display: 'flex',\n  marginLeft: `calc(${theme.spacing(1)} * 0.5)`,\n  marginRight: `calc(${theme.spacing(1)} * 0.5)`\n}, theme.palette.mode === 'light' ? {\n  backgroundColor: theme.palette.grey[100],\n  color: theme.palette.grey[700]\n} : {\n  backgroundColor: theme.palette.grey[700],\n  color: theme.palette.grey[100]\n}, {\n  borderRadius: 2,\n  '&:hover, &:focus': _extends({}, theme.palette.mode === 'light' ? {\n    backgroundColor: theme.palette.grey[200]\n  } : {\n    backgroundColor: theme.palette.grey[600]\n  }),\n  '&:active': _extends({\n    boxShadow: theme.shadows[0]\n  }, theme.palette.mode === 'light' ? {\n    backgroundColor: emphasize(theme.palette.grey[200], 0.12)\n  } : {\n    backgroundColor: emphasize(theme.palette.grey[600], 0.12)\n  })\n}));\nconst BreadcrumbCollapsedIcon = styled(MoreHorizIcon)({\n  width: 24,\n  height: 16\n});\n/**\n * @ignore - internal component.\n */\n\nfunction BreadcrumbCollapsed(props) {\n  const ownerState = props;\n  return /*#__PURE__*/_jsx(\"li\", {\n    children: /*#__PURE__*/_jsx(BreadcrumbCollapsedButton, _extends({\n      focusRipple: true\n    }, props, {\n      ownerState: ownerState,\n      children: /*#__PURE__*/_jsx(BreadcrumbCollapsedIcon, {\n        ownerState: ownerState\n      })\n    }))\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? BreadcrumbCollapsed.propTypes = {\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default BreadcrumbCollapsed;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getBreadcrumbsUtilityClass(slot) {\n  return generateUtilityClass('MuiBreadcrumbs', slot);\n}\nconst breadcrumbsClasses = generateUtilityClasses('MuiBreadcrumbs', ['root', 'ol', 'li', 'separator']);\nexport default breadcrumbsClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"component\", \"expandText\", \"itemsAfterCollapse\", \"itemsBeforeCollapse\", \"maxItems\", \"separator\"];\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { integerPropType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Typography from '../Typography';\nimport BreadcrumbCollapsed from './BreadcrumbCollapsed';\nimport breadcrumbsClasses, { getBreadcrumbsUtilityClass } from './breadcrumbsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    li: ['li'],\n    ol: ['ol'],\n    separator: ['separator']\n  };\n  return composeClasses(slots, getBreadcrumbsUtilityClass, classes);\n};\n\nconst BreadcrumbsRoot = styled(Typography, {\n  name: 'MuiBreadcrumbs',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    return [{\n      [`& .${breadcrumbsClasses.li}`]: styles.li\n    }, styles.root];\n  }\n})({});\nconst BreadcrumbsOl = styled('ol', {\n  name: 'MuiBreadcrumbs',\n  slot: 'Ol',\n  overridesResolver: (props, styles) => styles.ol\n})({\n  display: 'flex',\n  flexWrap: 'wrap',\n  alignItems: 'center',\n  padding: 0,\n  margin: 0,\n  listStyle: 'none'\n});\nconst BreadcrumbsSeparator = styled('li', {\n  name: 'MuiBreadcrumbs',\n  slot: 'Separator',\n  overridesResolver: (props, styles) => styles.separator\n})({\n  display: 'flex',\n  userSelect: 'none',\n  marginLeft: 8,\n  marginRight: 8\n});\n\nfunction insertSeparators(items, className, separator, ownerState) {\n  return items.reduce((acc, current, index) => {\n    if (index < items.length - 1) {\n      acc = acc.concat(current, /*#__PURE__*/_jsx(BreadcrumbsSeparator, {\n        \"aria-hidden\": true,\n        className: className,\n        ownerState: ownerState,\n        children: separator\n      }, `separator-${index}`));\n    } else {\n      acc.push(current);\n    }\n\n    return acc;\n  }, []);\n}\n\nconst Breadcrumbs = /*#__PURE__*/React.forwardRef(function Breadcrumbs(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiBreadcrumbs'\n  });\n\n  const {\n    children,\n    className,\n    component = 'nav',\n    expandText = 'Show path',\n    itemsAfterCollapse = 1,\n    itemsBeforeCollapse = 1,\n    maxItems = 8,\n    separator = '/'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [expanded, setExpanded] = React.useState(false);\n\n  const ownerState = _extends({}, props, {\n    component,\n    expanded,\n    expandText,\n    itemsAfterCollapse,\n    itemsBeforeCollapse,\n    maxItems,\n    separator\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const listRef = React.useRef(null);\n\n  const renderItemsBeforeAndAfter = allItems => {\n    const handleClickExpand = () => {\n      setExpanded(true); // The clicked element received the focus but gets removed from the DOM.\n      // Let's keep the focus in the component after expanding.\n      // Moving it to the <ol> or <nav> does not cause any announcement in NVDA.\n      // By moving it to some link/button at least we have some announcement.\n\n      const focusable = listRef.current.querySelector('a[href],button,[tabindex]');\n\n      if (focusable) {\n        focusable.focus();\n      }\n    }; // This defends against someone passing weird input, to ensure that if all\n    // items would be shown anyway, we just show all items without the EllipsisItem\n\n\n    if (itemsBeforeCollapse + itemsAfterCollapse >= allItems.length) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(['MUI: You have provided an invalid combination of props to the Breadcrumbs.', `itemsAfterCollapse={${itemsAfterCollapse}} + itemsBeforeCollapse={${itemsBeforeCollapse}} >= maxItems={${maxItems}}`].join('\\n'));\n      }\n\n      return allItems;\n    }\n\n    return [...allItems.slice(0, itemsBeforeCollapse), /*#__PURE__*/_jsx(BreadcrumbCollapsed, {\n      \"aria-label\": expandText,\n      onClick: handleClickExpand\n    }, \"ellipsis\"), ...allItems.slice(allItems.length - itemsAfterCollapse, allItems.length)];\n  };\n\n  const allItems = React.Children.toArray(children).filter(child => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"MUI: The Breadcrumbs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.isValidElement(child);\n  }).map((child, index) => /*#__PURE__*/_jsx(\"li\", {\n    className: classes.li,\n    children: child\n  }, `child-${index}`));\n  return /*#__PURE__*/_jsx(BreadcrumbsRoot, _extends({\n    ref: ref,\n    component: component,\n    color: \"text.secondary\",\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    children: /*#__PURE__*/_jsx(BreadcrumbsOl, {\n      className: classes.ol,\n      ref: listRef,\n      ownerState: ownerState,\n      children: insertSeparators(expanded || maxItems && allItems.length <= maxItems ? allItems : renderItemsBeforeAndAfter(allItems), classes.separator, separator, ownerState)\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Breadcrumbs.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Override the default label for the expand button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @default 'Show path'\n   */\n  expandText: PropTypes.string,\n\n  /**\n   * If max items is exceeded, the number of items to show after the ellipsis.\n   * @default 1\n   */\n  itemsAfterCollapse: integerPropType,\n\n  /**\n   * If max items is exceeded, the number of items to show before the ellipsis.\n   * @default 1\n   */\n  itemsBeforeCollapse: integerPropType,\n\n  /**\n   * Specifies the maximum number of breadcrumbs to display. When there are more\n   * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`\n   * will be shown, with an ellipsis in between.\n   * @default 8\n   */\n  maxItems: integerPropType,\n\n  /**\n   * Custom separator node.\n   * @default '/'\n   */\n  separator: PropTypes.node,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Breadcrumbs;","import { __spreadArray, __read } from 'tslib';\nimport { invariant } from 'hey-listen';\nimport { stopAnimation, animateVisualElement } from '../render/utils/animation.js';\nimport { setValues } from '../render/utils/setters.js';\n\n/**\n * @public\n */\nfunction animationControls() {\n    /**\n     * Track whether the host component has mounted.\n     */\n    var hasMounted = false;\n    /**\n     * Pending animations that are started before a component is mounted.\n     * TODO: Remove this as animations should only run in effects\n     */\n    var pendingAnimations = [];\n    /**\n     * A collection of linked component animation controls.\n     */\n    var subscribers = new Set();\n    var controls = {\n        subscribe: function (visualElement) {\n            subscribers.add(visualElement);\n            return function () { return void subscribers.delete(visualElement); };\n        },\n        start: function (definition, transitionOverride) {\n            /**\n             * TODO: We only perform this hasMounted check because in Framer we used to\n             * encourage the ability to start an animation within the render phase. This\n             * isn't behaviour concurrent-safe so when we make Framer concurrent-safe\n             * we can ditch this.\n             */\n            if (hasMounted) {\n                var animations_1 = [];\n                subscribers.forEach(function (visualElement) {\n                    animations_1.push(animateVisualElement(visualElement, definition, {\n                        transitionOverride: transitionOverride,\n                    }));\n                });\n                return Promise.all(animations_1);\n            }\n            else {\n                return new Promise(function (resolve) {\n                    pendingAnimations.push({\n                        animation: [definition, transitionOverride],\n                        resolve: resolve,\n                    });\n                });\n            }\n        },\n        set: function (definition) {\n            invariant(hasMounted, \"controls.set() should only be called after a component has mounted. Consider calling within a useEffect hook.\");\n            return subscribers.forEach(function (visualElement) {\n                setValues(visualElement, definition);\n            });\n        },\n        stop: function () {\n            subscribers.forEach(function (visualElement) {\n                stopAnimation(visualElement);\n            });\n        },\n        mount: function () {\n            hasMounted = true;\n            pendingAnimations.forEach(function (_a) {\n                var animation = _a.animation, resolve = _a.resolve;\n                controls.start.apply(controls, __spreadArray([], __read(animation))).then(resolve);\n            });\n            return function () {\n                hasMounted = false;\n                controls.stop();\n            };\n        },\n    };\n    return controls;\n}\n\nexport { animationControls };\n","import { animationControls } from './animation-controls.js';\nimport { useEffect } from 'react';\nimport { useConstant } from '../utils/use-constant.js';\n\n/**\n * Creates `AnimationControls`, which can be used to manually start, stop\n * and sequence animations on one or more components.\n *\n * The returned `AnimationControls` should be passed to the `animate` property\n * of the components you want to animate.\n *\n * These components can then be animated with the `start` method.\n *\n * @library\n *\n * ```jsx\n * import * as React from 'react'\n * import { Frame, useAnimation } from 'framer'\n *\n * export function MyComponent(props) {\n *    const controls = useAnimation()\n *\n *    controls.start({\n *        x: 100,\n *        transition: { duration: 0.5 },\n *    })\n *\n *    return <Frame animate={controls} />\n * }\n * ```\n *\n * @motion\n *\n * ```jsx\n * import * as React from 'react'\n * import { motion, useAnimation } from 'framer-motion'\n *\n * export function MyComponent(props) {\n *    const controls = useAnimation()\n *\n *    controls.start({\n *        x: 100,\n *        transition: { duration: 0.5 },\n *    })\n *\n *    return <motion.div animate={controls} />\n * }\n * ```\n *\n * @returns Animation controller with `start` and `stop` methods\n *\n * @public\n */\nfunction useAnimation() {\n    var controls = useConstant(animationControls);\n    useEffect(controls.mount, []);\n    return controls;\n}\n\nexport { useAnimation };\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getFabUtilityClass(slot) {\n  return generateUtilityClass('MuiFab', slot);\n}\nconst fabClasses = generateUtilityClasses('MuiFab', ['root', 'primary', 'secondary', 'extended', 'circular', 'focusVisible', 'disabled', 'colorInherit', 'sizeSmall', 'sizeMedium', 'sizeLarge']);\nexport default fabClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"color\", \"component\", \"disabled\", \"disableFocusRipple\", \"focusVisibleClassName\", \"size\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport fabClasses, { getFabUtilityClass } from './fabClasses';\nimport styled from '../styles/styled';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    color,\n    variant,\n    classes,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, `size${capitalize(size)}`, color === 'inherit' && 'colorInherit', color === 'primary' && 'primary', color === 'secondary' && 'secondary']\n  };\n  return composeClasses(slots, getFabUtilityClass, classes);\n};\n\nconst FabRoot = styled(ButtonBase, {\n  name: 'MuiFab',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`size${capitalize(ownerState.size)}`], ownerState.color === 'inherit' && styles.colorInherit, ownerState.color === 'primary' && styles.primary, ownerState.color === 'secondary' && styles.secondary];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({}, theme.typography.button, {\n  minHeight: 36,\n  transition: theme.transitions.create(['background-color', 'box-shadow', 'border-color'], {\n    duration: theme.transitions.duration.short\n  }),\n  borderRadius: '50%',\n  padding: 0,\n  minWidth: 0,\n  width: 56,\n  height: 56,\n  boxShadow: theme.shadows[6],\n  '&:active': {\n    boxShadow: theme.shadows[12]\n  },\n  color: theme.palette.getContrastText(theme.palette.grey[300]),\n  backgroundColor: theme.palette.grey[300],\n  '&:hover': {\n    backgroundColor: theme.palette.grey.A100,\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: theme.palette.grey[300]\n    },\n    textDecoration: 'none'\n  },\n  [`&.${fabClasses.focusVisible}`]: {\n    boxShadow: theme.shadows[6]\n  },\n  [`&.${fabClasses.disabled}`]: {\n    color: theme.palette.action.disabled,\n    boxShadow: theme.shadows[0],\n    backgroundColor: theme.palette.action.disabledBackground\n  }\n}, ownerState.size === 'small' && {\n  width: 40,\n  height: 40\n}, ownerState.size === 'medium' && {\n  width: 48,\n  height: 48\n}, ownerState.variant === 'extended' && {\n  borderRadius: 48 / 2,\n  padding: '0 16px',\n  width: 'auto',\n  minHeight: 'auto',\n  minWidth: 48,\n  height: 48\n}, ownerState.variant === 'extended' && ownerState.size === 'small' && {\n  width: 'auto',\n  padding: '0 8px',\n  borderRadius: 34 / 2,\n  minWidth: 34,\n  height: 34\n}, ownerState.variant === 'extended' && ownerState.size === 'medium' && {\n  width: 'auto',\n  padding: '0 16px',\n  borderRadius: 40 / 2,\n  minWidth: 40,\n  height: 40\n}, ownerState.color === 'inherit' && {\n  color: 'inherit'\n}), ({\n  theme,\n  ownerState\n}) => _extends({}, ownerState.color === 'primary' && {\n  color: theme.palette.primary.contrastText,\n  backgroundColor: theme.palette.primary.main,\n  '&:hover': {\n    backgroundColor: theme.palette.primary.dark,\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: theme.palette.primary.main\n    }\n  }\n}, ownerState.color === 'secondary' && {\n  color: theme.palette.secondary.contrastText,\n  backgroundColor: theme.palette.secondary.main,\n  '&:hover': {\n    backgroundColor: theme.palette.secondary.dark,\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: theme.palette.secondary.main\n    }\n  }\n}));\nconst Fab = /*#__PURE__*/React.forwardRef(function Fab(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFab'\n  });\n\n  const {\n    children,\n    className,\n    color = 'default',\n    component = 'button',\n    disabled = false,\n    disableFocusRipple = false,\n    focusVisibleClassName,\n    size = 'large',\n    variant = 'circular'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    disabled,\n    disableFocusRipple,\n    size,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FabRoot, _extends({\n    className: clsx(classes.root, className),\n    component: component,\n    disabled: disabled,\n    focusRipple: !disableFocusRipple,\n    focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Fab.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'default'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary']), PropTypes.string]),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect is disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * The URL to link to when the button is clicked.\n   * If defined, an `a` element will be used as the root node.\n   */\n  href: PropTypes.string,\n\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense button styling.\n   * @default 'large'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['small', 'medium', 'large']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The variant to use.\n   * @default 'circular'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['circular', 'extended']), PropTypes.string])\n} : void 0;\nexport default Fab;","import { ObserverInstanceCallback } from './index';\n\nconst observerMap = new Map<\n  string,\n  {\n    id: string;\n    observer: IntersectionObserver;\n    elements: Map<Element, Array<ObserverInstanceCallback>>;\n  }\n>();\n\nconst RootIds: WeakMap<Element | Document, string> = new WeakMap();\nlet rootId = 0;\n\nlet unsupportedValue: boolean | undefined = undefined;\n\n/**\n * What should be the default behavior if the IntersectionObserver is unsupported?\n * Ideally the polyfill has been loaded, you can have the following happen:\n * - `undefined`: Throw an error\n * - `true` or `false`: Set the `inView` value to this regardless of intersection state\n * **/\nexport function defaultFallbackInView(inView: boolean | undefined) {\n  unsupportedValue = inView;\n}\n\n/**\n * Generate a unique ID for the root element\n * @param root\n */\nfunction getRootId(root: IntersectionObserverInit['root']) {\n  if (!root) return '0';\n  if (RootIds.has(root)) return RootIds.get(root);\n  rootId += 1;\n  RootIds.set(root, rootId.toString());\n  return RootIds.get(root);\n}\n\n/**\n * Convert the options to a string Id, based on the values.\n * Ensures we can reuse the same observer when observing elements with the same options.\n * @param options\n */\nexport function optionsToId(options: IntersectionObserverInit) {\n  return Object.keys(options)\n    .sort()\n    .filter((key) => options[key] !== undefined)\n    .map((key) => {\n      return `${key}_${\n        key === 'root' ? getRootId(options.root) : options[key]\n      }`;\n    })\n    .toString();\n}\n\nfunction createObserver(options: IntersectionObserverInit) {\n  // Create a unique ID for this observer instance, based on the root, root margin and threshold.\n  let id = optionsToId(options);\n  let instance = observerMap.get(id);\n\n  if (!instance) {\n    // Create a map of elements this observer is going to observe. Each element has a list of callbacks that should be triggered, once it comes into view.\n    const elements = new Map<Element, Array<ObserverInstanceCallback>>();\n    let thresholds: number[] | readonly number[];\n\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        // While it would be nice if you could just look at isIntersecting to determine if the component is inside the viewport, browsers can't agree on how to use it.\n        // -Firefox ignores `threshold` when considering `isIntersecting`, so it will never be false again if `threshold` is > 0\n        const inView =\n          entry.isIntersecting &&\n          thresholds.some((threshold) => entry.intersectionRatio >= threshold);\n\n        // @ts-ignore support IntersectionObserver v2\n        if (options.trackVisibility && typeof entry.isVisible === 'undefined') {\n          // The browser doesn't support Intersection Observer v2, falling back to v1 behavior.\n          // @ts-ignore\n          entry.isVisible = inView;\n        }\n\n        elements.get(entry.target)?.forEach((callback) => {\n          callback(inView, entry);\n        });\n      });\n    }, options);\n\n    // Ensure we have a valid thresholds array. If not, use the threshold from the options\n    thresholds =\n      observer.thresholds ||\n      (Array.isArray(options.threshold)\n        ? options.threshold\n        : [options.threshold || 0]);\n\n    instance = {\n      id,\n      observer,\n      elements,\n    };\n\n    observerMap.set(id, instance);\n  }\n\n  return instance;\n}\n\n/**\n * @param element - DOM Element to observe\n * @param callback - Callback function to trigger when intersection status changes\n * @param options - Intersection Observer options\n * @param fallbackInView - Fallback inView value.\n * @return Function - Cleanup function that should be triggered to unregister the observer\n */\nexport function observe(\n  element: Element,\n  callback: ObserverInstanceCallback,\n  options: IntersectionObserverInit = {},\n  fallbackInView = unsupportedValue,\n) {\n  if (\n    typeof window.IntersectionObserver === 'undefined' &&\n    fallbackInView !== undefined\n  ) {\n    const bounds = element.getBoundingClientRect();\n    callback(fallbackInView, {\n      isIntersecting: fallbackInView,\n      target: element,\n      intersectionRatio:\n        typeof options.threshold === 'number' ? options.threshold : 0,\n      time: 0,\n      boundingClientRect: bounds,\n      intersectionRect: bounds,\n      rootBounds: bounds,\n    });\n    return () => {\n      // Nothing to cleanup\n    };\n  }\n  // An observer with the same options can be reused, so lets use this fact\n  const { id, observer, elements } = createObserver(options);\n\n  // Register the callback listener for this element\n  let callbacks = elements.get(element) || [];\n  if (!elements.has(element)) {\n    elements.set(element, callbacks);\n  }\n\n  callbacks.push(callback);\n  observer.observe(element);\n\n  return function unobserve() {\n    // Remove the callback from the callback list\n    callbacks.splice(callbacks.indexOf(callback), 1);\n\n    if (callbacks.length === 0) {\n      // No more callback exists for element, so destroy it\n      elements.delete(element);\n      observer.unobserve(element);\n    }\n\n    if (elements.size === 0) {\n      // No more elements are being observer by this instance, so destroy it\n      observer.disconnect();\n      observerMap.delete(id);\n    }\n  };\n}\n","import * as React from 'react';\nimport { IntersectionObserverProps, PlainChildrenProps } from './index';\nimport { observe } from './observe';\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\nfunction isPlainChildren(\n  props: IntersectionObserverProps | PlainChildrenProps,\n): props is PlainChildrenProps {\n  return typeof props.children !== 'function';\n}\n\n/**\n ## Render props\n\n To use the `<InView>` component, you pass it a function. It will be called\n whenever the state changes, with the new value of `inView`. In addition to the\n `inView` prop, children also receive a `ref` that should be set on the\n containing DOM element. This is the element that the IntersectionObserver will\n monitor.\n\n If you need it, you can also access the\n [`IntersectionObserverEntry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry)\n on `entry`, giving you access to all the details about the current intersection\n state.\n\n ```jsx\n import { InView } from 'react-intersection-observer';\n\n const Component = () => (\n <InView>\n {({ inView, ref, entry }) => (\n      <div ref={ref}>\n        <h2>{`Header inside viewport ${inView}.`}</h2>\n      </div>\n    )}\n </InView>\n );\n\n export default Component;\n ```\n\n ## Plain children\n\n You can pass any element to the `<InView />`, and it will handle creating the\n wrapping DOM element. Add a handler to the `onChange` method, and control the\n state in your own component. Any extra props you add to `<InView>` will be\n passed to the HTML element, allowing you set the `className`, `style`, etc.\n\n ```jsx\n import { InView } from 'react-intersection-observer';\n\n const Component = () => (\n <InView as=\"div\" onChange={(inView, entry) => console.log('Inview:', inView)}>\n <h2>Plain children are always rendered. Use onChange to monitor state.</h2>\n </InView>\n );\n\n export default Component;\n ```\n */\nexport class InView extends React.Component<\n  IntersectionObserverProps | PlainChildrenProps,\n  State\n> {\n  static displayName = 'InView';\n  static defaultProps = {\n    threshold: 0,\n    triggerOnce: false,\n    initialInView: false,\n  };\n\n  constructor(props: IntersectionObserverProps | PlainChildrenProps) {\n    super(props);\n    this.state = {\n      inView: !!props.initialInView,\n      entry: undefined,\n    };\n  }\n\n  componentDidUpdate(prevProps: IntersectionObserverProps) {\n    // If a IntersectionObserver option changed, reinit the observer\n    if (\n      prevProps.rootMargin !== this.props.rootMargin ||\n      prevProps.root !== this.props.root ||\n      prevProps.threshold !== this.props.threshold ||\n      prevProps.skip !== this.props.skip ||\n      prevProps.trackVisibility !== this.props.trackVisibility ||\n      prevProps.delay !== this.props.delay\n    ) {\n      this.unobserve();\n      this.observeNode();\n    }\n  }\n\n  componentWillUnmount() {\n    this.unobserve();\n    this.node = null;\n  }\n\n  node: Element | null = null;\n  _unobserveCb: (() => void) | null = null;\n\n  observeNode() {\n    if (!this.node || this.props.skip) return;\n    const {\n      threshold,\n      root,\n      rootMargin,\n      trackVisibility,\n      delay,\n      fallbackInView,\n    } = this.props;\n\n    this._unobserveCb = observe(\n      this.node,\n      this.handleChange,\n      {\n        threshold,\n        root,\n        rootMargin,\n        // @ts-ignore\n        trackVisibility,\n        // @ts-ignore\n        delay,\n      },\n      fallbackInView,\n    );\n  }\n\n  unobserve() {\n    if (this._unobserveCb) {\n      this._unobserveCb();\n      this._unobserveCb = null;\n    }\n  }\n\n  handleNode = (node?: Element | null) => {\n    if (this.node) {\n      // Clear the old observer, before we start observing a new element\n      this.unobserve();\n\n      if (!node && !this.props.triggerOnce && !this.props.skip) {\n        // Reset the state if we get a new node, and we aren't ignoring updates\n        this.setState({ inView: !!this.props.initialInView, entry: undefined });\n      }\n    }\n\n    this.node = node ? node : null;\n    this.observeNode();\n  };\n\n  handleChange = (inView: boolean, entry: IntersectionObserverEntry) => {\n    if (inView && this.props.triggerOnce) {\n      // If `triggerOnce` is true, we should stop observing the element.\n      this.unobserve();\n    }\n    if (!isPlainChildren(this.props)) {\n      // Store the current State, so we can pass it to the children in the next render update\n      // There's no reason to update the state for plain children, since it's not used in the rendering.\n      this.setState({ inView, entry });\n    }\n    if (this.props.onChange) {\n      // If the user is actively listening for onChange, always trigger it\n      this.props.onChange(inView, entry);\n    }\n  };\n\n  render() {\n    if (!isPlainChildren(this.props)) {\n      const { inView, entry } = this.state;\n      return this.props.children({ inView, entry, ref: this.handleNode });\n    }\n\n    const {\n      children,\n      as,\n      tag,\n      triggerOnce,\n      threshold,\n      root,\n      rootMargin,\n      onChange,\n      skip,\n      trackVisibility,\n      delay,\n      initialInView,\n      fallbackInView,\n      ...props\n    } = this.props;\n\n    return React.createElement(\n      as || tag || 'div',\n      { ref: this.handleNode, ...props },\n      children,\n    );\n  }\n}\n","import * as React from 'react';\nimport { InViewHookResponse, IntersectionOptions } from './index';\nimport { useEffect } from 'react';\nimport { observe } from './observe';\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\n/**\n * React Hooks make it easy to monitor the `inView` state of your components. Call\n * the `useInView` hook with the (optional) [options](#options) you need. It will\n * return an array containing a `ref`, the `inView` status and the current\n * [`entry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry).\n * Assign the `ref` to the DOM element you want to monitor, and the hook will\n * report the status.\n *\n * @example\n * ```jsx\n * import React from 'react';\n * import { useInView } from 'react-intersection-observer';\n *\n * const Component = () => {\n *   const { ref, inView, entry } = useInView({\n *       threshold: 0,\n *   });\n *\n *   return (\n *     <div ref={ref}>\n *       <h2>{`Header inside viewport ${inView}.`}</h2>\n *     </div>\n *   );\n * };\n * ```\n */\nexport function useInView({\n  threshold,\n  delay,\n  trackVisibility,\n  rootMargin,\n  root,\n  triggerOnce,\n  skip,\n  initialInView,\n  fallbackInView,\n}: IntersectionOptions = {}): InViewHookResponse {\n  const unobserve = React.useRef<Function>();\n  const [state, setState] = React.useState<State>({\n    inView: !!initialInView,\n  });\n  const setRef = React.useCallback(\n    (node) => {\n      if (unobserve.current !== undefined) {\n        unobserve.current();\n        unobserve.current = undefined;\n      }\n\n      // Skip creating the observer\n      if (skip) return;\n\n      if (node) {\n        unobserve.current = observe(\n          node,\n          (inView, entry) => {\n            setState({ inView, entry });\n\n            if (entry.isIntersecting && triggerOnce && unobserve.current) {\n              // If it should only trigger once, unobserve the element after it's inView\n              unobserve.current();\n              unobserve.current = undefined;\n            }\n          },\n          {\n            root,\n            rootMargin,\n            threshold,\n            // @ts-ignore\n            trackVisibility,\n            // @ts-ignore\n            delay,\n          },\n          fallbackInView,\n        );\n      }\n    },\n    // We break the rule here, because we aren't including the actual `threshold` variable\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      // If the threshold is an array, convert it to a string so it won't change between renders.\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      Array.isArray(threshold) ? threshold.toString() : threshold,\n      root,\n      rootMargin,\n      triggerOnce,\n      skip,\n      trackVisibility,\n      fallbackInView,\n      delay,\n    ],\n  );\n\n  /* eslint-disable-next-line */\n  useEffect(() => {\n    if (!unobserve.current && state.entry && !triggerOnce && !skip) {\n      // If we don't have a ref, then reset the state (unless the hook is set to only `triggerOnce` or `skip`)\n      // This ensures we correctly reflect the current state - If you aren't observing anything, then nothing is inView\n      setState({\n        inView: !!initialInView,\n      });\n    }\n  });\n\n  const result = [setRef, state.inView, state.entry] as InViewHookResponse;\n\n  // Support object destructuring, by adding the specific values.\n  result.ref = result[0];\n  result.inView = result[1];\n  result.entry = result[2];\n\n  return result;\n}\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getDialogUtilityClass(slot) {\n  return generateUtilityClass('MuiDialog', slot);\n}\nconst dialogClasses = generateUtilityClasses('MuiDialog', ['root', 'scrollPaper', 'scrollBody', 'container', 'paper', 'paperScrollPaper', 'paperScrollBody', 'paperWidthFalse', 'paperWidthXs', 'paperWidthSm', 'paperWidthMd', 'paperWidthLg', 'paperWidthXl', 'paperFullWidth', 'paperFullScreen']);\nexport default dialogClasses;","import * as React from 'react';\nimport { useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.js';\nimport { useConstant } from '../../utils/use-constant.js';\n\nvar presenceId = 0;\nfunction getPresenceId() {\n    var id = presenceId;\n    presenceId++;\n    return id;\n}\nvar PresenceChild = function (_a) {\n    var children = _a.children, initial = _a.initial, isPresent = _a.isPresent, onExitComplete = _a.onExitComplete, custom = _a.custom, presenceAffectsLayout = _a.presenceAffectsLayout;\n    var presenceChildren = useConstant(newChildrenMap);\n    var id = useConstant(getPresenceId);\n    var context = useMemo(function () { return ({\n        id: id,\n        initial: initial,\n        isPresent: isPresent,\n        custom: custom,\n        onExitComplete: function (childId) {\n            presenceChildren.set(childId, true);\n            var allComplete = true;\n            presenceChildren.forEach(function (isComplete) {\n                if (!isComplete)\n                    allComplete = false;\n            });\n            allComplete && (onExitComplete === null || onExitComplete === void 0 ? void 0 : onExitComplete());\n        },\n        register: function (childId) {\n            presenceChildren.set(childId, false);\n            return function () { return presenceChildren.delete(childId); };\n        },\n    }); }, \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout ? undefined : [isPresent]);\n    useMemo(function () {\n        presenceChildren.forEach(function (_, key) { return presenceChildren.set(key, false); });\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(function () {\n        !isPresent && !presenceChildren.size && (onExitComplete === null || onExitComplete === void 0 ? void 0 : onExitComplete());\n    }, [isPresent]);\n    return (React.createElement(PresenceContext.Provider, { value: context }, children));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import { __spreadArray, __read } from 'tslib';\nimport * as React from 'react';\nimport { useContext, useRef, cloneElement, Children, isValidElement } from 'react';\nimport { useForceUpdate } from '../../utils/use-force-update.js';\nimport { PresenceChild } from './PresenceChild.js';\nimport { SharedLayoutContext, isSharedLayout } from '../../context/SharedLayoutContext.js';\n\nfunction getChildKey(child) {\n    return child.key || \"\";\n}\nfunction updateChildLookup(children, allChildren) {\n    var seenChildren = process.env.NODE_ENV !== \"production\" ? new Set() : null;\n    children.forEach(function (child) {\n        var key = getChildKey(child);\n        if (process.env.NODE_ENV !== \"production\" && seenChildren) {\n            if (seenChildren.has(key)) {\n                console.warn(\"Children of AnimatePresence require unique keys. \\\"\" + key + \"\\\" is a duplicate.\");\n            }\n            seenChildren.add(key);\n        }\n        allChildren.set(key, child);\n    });\n}\nfunction onlyElements(children) {\n    var filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, function (child) {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * @library\n *\n * Any `Frame` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { Frame, AnimatePresence } from 'framer'\n *\n * // As items are added and removed from `items`\n * export function Items({ items }) {\n *   return (\n *     <AnimatePresence>\n *       {items.map(item => (\n *         <Frame\n *           key={item.id}\n *           initial={{ opacity: 0 }}\n *           animate={{ opacity: 1 }}\n *           exit={{ opacity: 0 }}\n *         />\n *       ))}\n *     </AnimatePresence>\n *   )\n * }\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * @motion\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nvar AnimatePresence = function (_a) {\n    var children = _a.children, custom = _a.custom, _b = _a.initial, initial = _b === void 0 ? true : _b, onExitComplete = _a.onExitComplete, exitBeforeEnter = _a.exitBeforeEnter, _c = _a.presenceAffectsLayout, presenceAffectsLayout = _c === void 0 ? true : _c;\n    // We want to force a re-render once all exiting animations have finished. We\n    // either use a local forceRender function, or one from a parent context if it exists.\n    var forceRender = useForceUpdate();\n    var layoutContext = useContext(SharedLayoutContext);\n    if (isSharedLayout(layoutContext)) {\n        forceRender = layoutContext.forceUpdate;\n    }\n    var isInitialRender = useRef(true);\n    // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key\n    var filteredChildren = onlyElements(children);\n    // Keep a living record of the children we're actually rendering so we\n    // can diff to figure out which are entering and exiting\n    var presentChildren = useRef(filteredChildren);\n    // A lookup table to quickly reference components by key\n    var allChildren = useRef(new Map())\n        .current;\n    // A living record of all currently exiting components.\n    var exiting = useRef(new Set()).current;\n    updateChildLookup(filteredChildren, allChildren);\n    // If this is the initial component render, just deal with logic surrounding whether\n    // we play onMount animations or not.\n    if (isInitialRender.current) {\n        isInitialRender.current = false;\n        return (React.createElement(React.Fragment, null, filteredChildren.map(function (child) { return (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, initial: initial ? undefined : false, presenceAffectsLayout: presenceAffectsLayout }, child)); })));\n    }\n    // If this is a subsequent render, deal with entering and exiting children\n    var childrenToRender = __spreadArray([], __read(filteredChildren));\n    // Diff the keys of the currently-present and target children to update our\n    // exiting list.\n    var presentKeys = presentChildren.current.map(getChildKey);\n    var targetKeys = filteredChildren.map(getChildKey);\n    // Diff the present children with our target children and mark those that are exiting\n    var numPresent = presentKeys.length;\n    for (var i = 0; i < numPresent; i++) {\n        var key = presentKeys[i];\n        if (targetKeys.indexOf(key) === -1) {\n            exiting.add(key);\n        }\n        else {\n            // In case this key has re-entered, remove from the exiting list\n            exiting.delete(key);\n        }\n    }\n    // If we currently have exiting children, and we're deferring rendering incoming children\n    // until after all current children have exiting, empty the childrenToRender array\n    if (exitBeforeEnter && exiting.size) {\n        childrenToRender = [];\n    }\n    // Loop through all currently exiting components and clone them to overwrite `animate`\n    // with any `exit` prop they might have defined.\n    exiting.forEach(function (key) {\n        // If this component is actually entering again, early return\n        if (targetKeys.indexOf(key) !== -1)\n            return;\n        var child = allChildren.get(key);\n        if (!child)\n            return;\n        var insertionIndex = presentKeys.indexOf(key);\n        var onExit = function () {\n            allChildren.delete(key);\n            exiting.delete(key);\n            // Remove this child from the present children\n            var removeIndex = presentChildren.current.findIndex(function (presentChild) { return presentChild.key === key; });\n            presentChildren.current.splice(removeIndex, 1);\n            // Defer re-rendering until all exiting children have indeed left\n            if (!exiting.size) {\n                presentChildren.current = filteredChildren;\n                forceRender();\n                onExitComplete && onExitComplete();\n            }\n        };\n        childrenToRender.splice(insertionIndex, 0, React.createElement(PresenceChild, { key: getChildKey(child), isPresent: false, onExitComplete: onExit, custom: custom, presenceAffectsLayout: presenceAffectsLayout }, child));\n    });\n    // Add `MotionContext` even to children that don't need it to ensure we're rendering\n    // the same tree between renders\n    childrenToRender = childrenToRender.map(function (child) {\n        var key = child.key;\n        return exiting.has(key) ? (child) : (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, presenceAffectsLayout: presenceAffectsLayout }, child));\n    });\n    presentChildren.current = childrenToRender;\n    if (process.env.NODE_ENV !== \"production\" &&\n        exitBeforeEnter &&\n        childrenToRender.length > 1) {\n        console.warn(\"You're attempting to animate multiple children within AnimatePresence, but its exitBeforeEnter prop is set to true. This will lead to odd visual behaviour.\");\n    }\n    return (React.createElement(React.Fragment, null, exiting.size\n        ? childrenToRender\n        : childrenToRender.map(function (child) { return cloneElement(child); })));\n};\n\nexport { AnimatePresence };\n","import { __read } from 'tslib';\nimport { useCallback, useRef, useState } from 'react';\nimport { useUnmountEffect } from './use-unmount-effect.js';\n\nfunction useForceUpdate() {\n    var unloadingRef = useRef(false);\n    var _a = __read(useState(0), 2), forcedRenderCount = _a[0], setForcedRenderCount = _a[1];\n    useUnmountEffect(function () { return (unloadingRef.current = true); });\n    return useCallback(function () {\n        !unloadingRef.current && setForcedRenderCount(forcedRenderCount + 1);\n    }, [forcedRenderCount]);\n}\n\nexport { useForceUpdate };\n"],"sourceRoot":""}