{"version":3,"sources":["components/user/account/notifications/Notification.js"],"names":["ACTIVITY_OPTIONS","value","label","APPLICATION_OPTIONS","CLUB_OPTIONS","FormControlItem","styled","FormControlLabel","marginLeft","marginRight","display","justifyContent","width","AccountNotifications","enqueueSnackbar","useSnackbar","notifications","useSelector","state","user","formik","useFormik","enableReinitialize","initialValues","notificationTurn","activityComments","activityAnswers","activityFollows","applicationNews","applicationProduct","applicationBlog","clubEvents","clubNews","clubMedia","onSubmit","values","a","setSubmitting","fakeRequest","alert","JSON","stringify","variant","getFieldProps","autoComplete","noValidate","container","spacing","item","xs","mb","sx","p","py","control","checked","mt","labelPlacement","md","marginTop","alignItems","map","activity","color","mx"],"mappings":"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","file":"static/js/57.1b30e24a.chunk.js","sourcesContent":["import { useSnackbar } from \"notistack\";\r\nimport { useFormik, Form, FormikProvider } from \"formik\";\r\n// material\r\nimport {\r\n  Card,\r\n  Stack,\r\n  Switch,\r\n  Typography,\r\n  FormControlLabel,\r\n  Grid,\r\n  Box,\r\n} from \"@mui/material\";\r\nimport { styled } from \"@mui/material/styles\";\r\n\r\n// redux\r\nimport { useSelector } from \"../../../../redux/store\";\r\n// utils\r\nimport fakeRequest from \"../../../../utils/fakeRequest\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst ACTIVITY_OPTIONS = [\r\n  {\r\n    value: \"activityComments\",\r\n    label: \"Comanna comments on my avont\",\r\n  },\r\n  {\r\n    value: \"activityAnswers\",\r\n    label: \"Someone comments on my news\",\r\n  },\r\n  { value: \"activityFollows\", label: \"Someone follows me\" },\r\n];\r\n\r\nconst APPLICATION_OPTIONS = [\r\n  { value: \"applicationNews\", label: \"News and announcements\" },\r\n  { value: \"applicationProduct\", label: \"Weekly product updates\" },\r\n  { value: \"applicationBlog\", label: \"Weekly blog digest\" },\r\n];\r\nconst CLUB_OPTIONS = [\r\n  { value: \"clubEvents\", label: \"Event is created\" },\r\n  { value: \"clubNews\", label: \"News is published\" },\r\n  { value: \"clubMedia\", label: \"Album is created\" },\r\n];\r\n\r\n// ----------------------------------------------------------------------\r\nconst FormControlItem = styled(FormControlLabel)({\r\n  marginLeft: 0,\r\n  marginRight: 0,\r\n  display: \"flex\",\r\n  justifyContent: \"space-between\",\r\n  width: \"100%\",\r\n});\r\nexport default function AccountNotifications() {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const { notifications } = useSelector((state) => state.user);\r\n\r\n  const formik = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: {\r\n      notificationTurn: true,\r\n      activityComments: notifications.activityComments,\r\n      activityAnswers: notifications.activityAnswers,\r\n      activityFollows: notifications.activityFollows,\r\n      applicationNews: notifications.applicationNews,\r\n      applicationProduct: notifications.applicationProduct,\r\n      applicationBlog: notifications.applicationBlog,\r\n      clubEvents: false,\r\n      clubNews: false,\r\n      clubMedia: false,\r\n    },\r\n    onSubmit: async (values, { setSubmitting }) => {\r\n      await fakeRequest(500);\r\n      setSubmitting(false);\r\n      alert(JSON.stringify(values, null, 2));\r\n      enqueueSnackbar(\"Save success\", { variant: \"success\" });\r\n    },\r\n  });\r\n\r\n  const { values, getFieldProps } = formik;\r\n  return (\r\n    <FormikProvider value={formik}>\r\n      <Form autoComplete=\"off\" noValidate>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} mb={3}>\r\n            <Card sx={{ p: 2.5, py: 3.5 }}>\r\n              <Box>\r\n                <FormControlItem\r\n                  control={\r\n                    <Switch\r\n                      {...getFieldProps(\"notificationTurn\")}\r\n                      checked={values.notificationTurn}\r\n                    />\r\n                  }\r\n                  label={\r\n                    <Box>\r\n                      <Typography variant=\"h5\">Notification On</Typography>\r\n                      <Typography variant=\"body1\" sx={{ mt: 1 }}>\r\n                        If you wish to stop all notifications turn this off. You\r\n                        can change this anytime\r\n                      </Typography>\r\n                    </Box>\r\n                  }\r\n                  labelPlacement=\"start\"\r\n                />\r\n              </Box>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <Card sx={{ p: 2.5 }}>\r\n              <Stack spacing={2} sx={{ width: 1 }}>\r\n                <Typography variant=\"h6\">Activity</Typography>\r\n                <Typography\r\n                  variant=\"body2\"\r\n                  sx={{ marginTop: \"7px !important\" }}\r\n                >\r\n                  Send me email when\r\n                </Typography>\r\n\r\n                <Stack alignItems=\"flex-start\">\r\n                  {ACTIVITY_OPTIONS.map((activity) => (\r\n                    <FormControlItem\r\n                      key={activity.value}\r\n                      control={\r\n                        <Switch\r\n                          {...getFieldProps(activity.value)}\r\n                          checked={values[activity.value]}\r\n                        />\r\n                      }\r\n                      label={activity.label}\r\n                      labelPlacement=\"start\"\r\n                      sx={{\r\n                        color: \"text.secondary\",\r\n                      }}\r\n                    />\r\n                  ))}\r\n                </Stack>\r\n              </Stack>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <Card sx={{ p: 2.5 }}>\r\n              <Stack spacing={2} sx={{ width: 1 }}>\r\n                <Typography variant=\"h6\">Clubs Activitv</Typography>\r\n                <Typography\r\n                  variant=\"body2\"\r\n                  sx={{ marginTop: \"7px !important\" }}\r\n                >\r\n                  Send me email when activitv in following club\r\n                </Typography>\r\n                <Stack alignItems=\"flex-start\">\r\n                  {CLUB_OPTIONS.map((item) => (\r\n                    <FormControlItem\r\n                      key={item.value}\r\n                      control={\r\n                        <Switch\r\n                          {...getFieldProps(item.value)}\r\n                          checked={values[item.value]}\r\n                        />\r\n                      }\r\n                      labelPlacement=\"start\"\r\n                      label={item.label}\r\n                      sx={{\r\n                        color: \"text.secondary\",\r\n                      }}\r\n                    />\r\n                  ))}\r\n                </Stack>\r\n              </Stack>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <Card sx={{ p: 2.5 }}>\r\n              <Stack spacing={2} sx={{ width: 1 }}>\r\n                <Typography variant=\"h6\">Application</Typography>\r\n                <Typography\r\n                  variant=\"body2\"\r\n                  sx={{ marginTop: \"7px !important\" }}\r\n                >\r\n                  Send me email for\r\n                </Typography>\r\n                <Stack alignItems=\"flex-start\">\r\n                  {APPLICATION_OPTIONS.map((item) => (\r\n                    <FormControlLabel\r\n                      key={item.value}\r\n                      control={\r\n                        <Switch\r\n                          {...getFieldProps(item.value)}\r\n                          checked={values[item.value]}\r\n                        />\r\n                      }\r\n                      labelPlacement=\"start\"\r\n                      label={item.label}\r\n                      sx={{\r\n                        mx: 0,\r\n                        display: \"flex\",\r\n                        justifyContent: \"space-between\",\r\n                        color: \"text.secondary\",\r\n                        width: \"100%\",\r\n                      }}\r\n                    />\r\n                  ))}\r\n                </Stack>\r\n              </Stack>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      </Form>\r\n    </FormikProvider>\r\n  );\r\n}\r\n"],"sourceRoot":""}